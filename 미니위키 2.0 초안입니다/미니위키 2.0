<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>미니위키</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 2rem;
      max-width: 768px;
      margin: auto;
      background-color: white;
      color: black;
      transition: background-color 0.3s, color 0.3s;
    }
    body.dark {
      background-color: #2b2b2b;
      color: #e0e0e0;
    }
    .search {
      margin-bottom: 1rem;
      width: 100%;
      padding: 0.5rem;
      font-size: 1rem;
    }
    .card {
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 1rem;
      margin-bottom: 1rem;
      cursor: pointer;
      transition: background-color 0.2s;
    }
    .card:hover {
      background-color: #f0f0f0;
    }
    body.dark .card:hover {
      background-color: #1e1e1e;
    }
    .back-button {
      color: #3b82f6;
      text-decoration: underline;
      cursor: pointer;
      margin-bottom: 1rem;
      display: inline-block;
    }
    .hidden {
      display: none;
    }
    mark {
      background-color: yellow;
    }
    .add-form {
      margin-top: 2rem;
      border-top: 1px solid #ccc;
      padding: 1rem;
      background-color: #f9f9f9;
      border-radius: 8px;
      box-sizing: border-box;
    }
    .add-form input, .add-form textarea {
      width: 100%;
      max-width: 100%;
      padding: 1rem;
      font-size: 1.1rem;
      margin-bottom: 1rem;
      border: 1px solid #ccc;
      border-radius: 6px;
      resize: none;
      box-sizing: border-box;
    }
    .dark-toggle {
      float: right;
      cursor: pointer;
      font-size: 0.9rem;
      margin-top: -2.5rem;
    }
    button {
      background-color: #3b82f6;
      color: white;
      border: none;
      padding: 0.5rem 1rem;
      border-radius: 6px;
      cursor: pointer;
      font-size: 0.9rem;
      transition: background-color 0.2s;
    }
    button:hover {
      background-color: #2563eb;
    }
    .button-group {
      margin-top: 1rem;
    }
    .button-group button {
      margin-right: 0.5rem;
    }
  </style>
</head>
<body>
  <h1>📚 미니위키 <span class="dark-toggle" id="toggleTheme">🌙 다크 모드</span></h1>
  <input type="text" id="searchInput" class="search" placeholder="문서 검색...">

  <div id="docList"></div>

  <div id="docView" class="hidden">
    <span class="back-button" id="backButton">← 목록으로 돌아가기</span>
    <h2 id="docTitle"></h2>
    <div id="docContent"></div>
    <div class="button-group">
      <button id="editDoc">✏️ 수정</button>
      <button id="deleteDoc">🗑️ 삭제</button>
    </div>
  </div>

  <div class="add-form">
    <h3>📄 문서 추가</h3>
    <input type="text" id="newTitle" placeholder="제목 (예: Galaxy Z10)">
    <input type="text" id="newId" placeholder="ID (예: galaxy-z10)">
    <textarea id="newContent" rows="8" placeholder="내용 (HTML 허용)"></textarea>
    <button id="addDocButton">추가</button>
  </div>

  <script>
    window.addEventListener('DOMContentLoaded', () => {
      let documents = JSON.parse(localStorage.getItem('documents')) || [
        {
          id: "galaxy-a15",
          title: "Galaxy A15",
          content: "Galaxy A15는 <strong>삼성전자</strong>에서 출시한 보급형 스마트폰이다.<br>배터리 효율이 좋다."
        },
        {
          id: "iphone-16",
          title: "iPhone 16",
          content: "iPhone 16은 <strong>애플</strong>의 2024년형 스마트폰으로,<br>성능과 카메라가 개선되었다."
        }
      ];

      const searchInput = document.getElementById("searchInput");
      const docList = document.getElementById("docList");
      const docView = document.getElementById("docView");
      const docTitle = document.getElementById("docTitle");
      const docContent = document.getElementById("docContent");
      const backButton = document.getElementById("backButton");

      const newTitle = document.getElementById("newTitle");
      const newId = document.getElementById("newId");
      const newContent = document.getElementById("newContent");
      const addDocButton = document.getElementById("addDocButton");
      const toggleTheme = document.getElementById("toggleTheme");
      const editDocButton = document.getElementById("editDoc");
      const deleteDocButton = document.getElementById("deleteDoc");

      function saveDocuments() {
        localStorage.setItem('documents', JSON.stringify(documents));
      }

      function highlight(text, query) {
        if (!query) return text;
        const regex = new RegExp(`(${query})`, 'gi');
        return text.replace(regex, '<mark>$1</mark>');
      }

      function renderList(filtered = documents, query = "") {
        docList.innerHTML = "";
        if (filtered.length === 0) {
          docList.innerHTML = "<p>검색 결과가 없습니다.</p>";
          return;
        }
        filtered.forEach(doc => {
          const card = document.createElement("div");
          card.className = "card";
          card.innerHTML = highlight(doc.title, query);
          card.addEventListener("click", () => {
            location.hash = doc.id;
            showDoc(doc);
          });
          docList.appendChild(card);
        });
      }

      function showDoc(doc) {
        docTitle.textContent = doc.title;
        docContent.innerHTML = doc.content;
        docList.classList.add("hidden");
        docView.classList.remove("hidden");
        editDocButton.dataset.id = doc.id;
        deleteDocButton.dataset.id = doc.id;
      }

      function goBack() {
        location.hash = "";
        docView.classList.add("hidden");
        docList.classList.remove("hidden");
      }

      function handleSearch() {
        const query = searchInput.value.toLowerCase().trim();
        const filtered = documents.filter(doc => doc.title.toLowerCase().includes(query));
        renderList(filtered, query);
      }

      function handleHashChange() {
        const hash = location.hash.replace("#", "");
        const match = documents.find(doc => doc.id === hash);
        if (match) {
          showDoc(match);
        } else {
          goBack();
        }
      }

      function addDocument() {
        const title = newTitle.value.trim();
        const id = newId.value.trim();
        const content = newContent.value.trim();

        if (!title || !id || !content) {
          alert("모든 항목을 입력해주세요.");
          return;
        }
        if (documents.find(d => d.id === id)) {
          alert("이미 존재하는 ID입니다.");
          return;
        }

        const newDoc = { id, title, content };
        documents.push(newDoc);
        saveDocuments();

        newTitle.value = "";
        newId.value = "";
        newContent.value = "";

        renderList(documents);
        alert("문서가 추가되었습니다!");
      }

      function toggleDarkMode() {
        document.body.classList.toggle("dark");
        const isDark = document.body.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
        toggleTheme.textContent = isDark ? "☀️ 라이트 모드" : "🌙 다크 모드";
      }

      function applySavedTheme() {
        const saved = localStorage.getItem("theme");
        if (saved === "dark") {
          document.body.classList.add("dark");
          toggleTheme.textContent = "☀️ 라이트 모드";
        }
      }

      function deleteDocument(id) {
        if (!confirm("정말 삭제하시겠습니까?")) return;
        documents = documents.filter(doc => doc.id !== id);
        saveDocuments();
        goBack();
        renderList(documents);
      }

      function editDocument(id) {
        const doc = documents.find(d => d.id === id);
        if (!doc) return;

        const newTitleInput = prompt("새 제목:", doc.title);
        if (!newTitleInput) return;
        const newContentInput = prompt("새 내용 (HTML 허용):", doc.content);
        if (!newContentInput) return;

        doc.title = newTitleInput;
        doc.content = newContentInput;
        saveDocuments();
        showDoc(doc);
        renderList(documents);
      }

      editDocButton.addEventListener("click", () => editDocument(editDocButton.dataset.id));
      deleteDocButton.addEventListener("click", () => deleteDocument(deleteDocButton.dataset.id));

      searchInput.addEventListener("input", handleSearch);
      backButton.addEventListener("click", goBack);
      addDocButton.addEventListener("click", addDocument);
      toggleTheme.addEventListener("click", toggleDarkMode);
      window.addEventListener("hashchange", handleHashChange);

      applySavedTheme();
      renderList();
      handleHashChange();
    });
  </script>
</body>
</html>
